name: Auto-merge Agent PRs

on:
  pull_request:
    types: [opened, synchronize]
    branches: [main]
  workflow_dispatch:
    inputs:
      pr_number:
        description: 'PR number to auto-merge'
        required: true
        type: string
      merge_method:
        description: 'Merge method'
        required: false
        type: choice
        default: 'squash'
        options:
          - 'merge'
          - 'squash'
          - 'rebase'

jobs:
  auto-merge:
    runs-on: ubuntu-latest
    # Only run for PRs from cursor/ branches OR manual workflow dispatch
    if: startsWith(github.head_ref, 'cursor/') || github.event_name == 'workflow_dispatch'
    permissions:
      contents: write
      pull-requests: write
      actions: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Check Trusted User
        run: |
          echo "üîç Checking if user '${{ github.actor }}' is in trusted users list..."
          if [[ "${{ secrets.TRUSTED_USERS }}" == *"${{ github.actor }}"* ]]; then
            echo "‚úÖ User '${{ github.actor }}' is trusted"
            echo "is_trusted=true" >> $GITHUB_OUTPUT
          else
            echo "‚ùå User '${{ github.actor }}' is not in trusted users list"
            echo "is_trusted=false" >> $GITHUB_OUTPUT
            echo "Trusted users: ${{ secrets.TRUSTED_USERS }}"
            if [ "${{ github.event_name }}" != "workflow_dispatch" ]; then
              exit 1
            else
              echo "‚ö†Ô∏è Manual workflow dispatch - allowing execution but user not in trusted list"
            fi
          fi

      - name: Setup Git References
        run: |
          echo "üîß Setting up git references..."
          git fetch origin main
          git branch -r
          echo "‚úÖ Git references ready"

      - name: Check for Apps Changes
        id: check-apps-changes
        run: |
          echo "üîç Checking if this PR contains changes to apps/ directory..."
          
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "üìã Manual workflow dispatch - checking PR #${{ github.event.inputs.pr_number }}"
            # For manual dispatch, we'll assume there might be changes and let the deploy workflow decide
            echo "has_apps_changes=true" >> $GITHUB_OUTPUT
            echo "‚úÖ Manual dispatch - assuming apps changes for safety"
          else
            # Get the list of changed files in this PR using GitHub Actions context
            # Use the base and head refs from the PR context
            BASE_REF="${{ github.event.pull_request.base.ref }}"
            HEAD_REF="${{ github.event.pull_request.head.ref }}"
            
            echo "Base ref: $BASE_REF"
            echo "Head ref: $HEAD_REF"
            
            # Fetch the base branch to ensure we have the reference
            git fetch origin $BASE_REF
            
            # Get changed files using the proper git references
            CHANGED_FILES=$(git diff --name-only origin/$BASE_REF...HEAD)
            echo "Changed files in PR: $CHANGED_FILES"
            
            # Check if any files in apps/ directory were changed
            if echo "$CHANGED_FILES" | grep -q "^apps/"; then
              echo "‚úÖ Changes detected in apps/ directory"
              echo "has_apps_changes=true" >> $GITHUB_OUTPUT
            else
              echo "‚è≠Ô∏è No changes in apps/ directory"
              echo "has_apps_changes=false" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Auto-merge Agent PR
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            PR_NUMBER="${{ github.event.inputs.pr_number }}"
            MERGE_METHOD="${{ github.event.inputs.merge_method || 'squash' }}"
            echo "üîÑ Manual auto-merge of PR #$PR_NUMBER using $MERGE_METHOD method..."
            node scripts/auto-merge.js $PR_NUMBER $MERGE_METHOD
          else
            echo "üîÑ Auto-merging PR #${{ github.event.pull_request.number }}..."
            node scripts/auto-merge.js ${{ github.event.pull_request.number }} squash
          fi
          echo "‚úÖ PR auto-merged successfully"
          if [ "${{ steps.check-apps-changes.outputs.has_apps_changes }}" = "true" ]; then
            echo "üìù Apps changes detected - will trigger deploy workflow after merge"
          else
            echo "üìù No apps changes - skipping deploy workflow"
          fi

      - name: Trigger Deploy Workflow
        if: steps.check-apps-changes.outputs.has_apps_changes == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            console.log('üöÄ Triggering deploy workflow after auto-merge (apps changes detected)...');
            
            // Wait a moment for the merge to complete
            await new Promise(resolve => setTimeout(resolve, 2000));
            
            try {
              await github.rest.actions.createWorkflowDispatch({
                owner: context.repo.owner,
                repo: context.repo.repo,
                workflow_id: 'deploy.yml',
                ref: 'main'
              });
              console.log('‚úÖ Deploy workflow triggered successfully!');
            } catch (error) {
              console.error('‚ùå Failed to trigger deploy workflow:', error.message);
              // Don't fail the auto-merge if deploy trigger fails
              console.log('‚ö†Ô∏è Auto-merge succeeded but deploy workflow may need manual trigger');
            }
