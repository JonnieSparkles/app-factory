name: üê¶ Twitter Deployment Announcement

on:
  workflow_dispatch:
    inputs:
      deployment_hash:
        description: 'Deployment hash/undername to announce'
        required: true
        type: string
      file_path:
        description: 'File that was deployed'
        required: false
        type: string
        default: 'index.html'
      announce_type:
        description: 'Announcement type (public only)'
        required: false
        type: choice
        default: 'public'
        options:
          - 'public'
      custom_message:
        description: 'Custom message (optional)'
        required: false
        type: string
  workflow_run:
    workflows: ["üöÄ Deploy to Arweave"]
    types: [completed]
    branches: [main]

jobs:
  announce:
    runs-on: ubuntu-latest
    # Only run if the deploy workflow succeeded or manual trigger
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' }}
    permissions:
      contents: read
    steps:
      - name: üöÄ Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for better commit analysis

      - name: üîß Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: üì¶ Install Dependencies
        run: npm ci

      - name: üß™ Test Twitter Connection
        env:
          TWITTER_APP_KEY: ${{ secrets.TWITTER_APP_KEY }}
          TWITTER_APP_SECRET: ${{ secrets.TWITTER_APP_SECRET }}
          TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
          TWITTER_ACCESS_SECRET: ${{ secrets.TWITTER_ACCESS_SECRET }}
        run: |
          echo "üîç Testing Twitter API connection..."
          if node deploy.js --test-twitter; then
            echo "‚úÖ Twitter connection successful"
          else
            echo "‚ùå Twitter connection failed - skipping announcement"
            exit 0
          fi

      - name: üìä Get Deployment Information
        id: deployment
        run: |
          echo "üîç Determining deployment information..."
          
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "üìù Manual trigger detected"
            echo "hash=${{ github.event.inputs.deployment_hash }}" >> $GITHUB_OUTPUT
            echo "file_path=${{ github.event.inputs.file_path }}" >> $GITHUB_OUTPUT
            echo "message=${{ github.event.inputs.custom_message }}" >> $GITHUB_OUTPUT
            echo "trigger=manual" >> $GITHUB_OUTPUT
          else
            echo "üîÑ Workflow run trigger detected"
            # Try to get the latest deployment hash from logs
            if [ -f "logs/deployments.json" ]; then
              DEPLOYMENT_HASH=$(node -e "
                const fs = require('fs');
                try {
                  const logs = JSON.parse(fs.readFileSync('logs/deployments.json', 'utf8'));
                  const latest = logs[logs.length - 1];
                  if (latest && latest.success && (latest.undername || latest.commitHash)) {
                    console.log(latest.undername || latest.commitHash);
                  } else {
                    console.log('');
                  }
                } catch (e) {
                  console.log('');
                }
              ")
              
              if [ -n "$DEPLOYMENT_HASH" ]; then
                echo "hash=$DEPLOYMENT_HASH" >> $GITHUB_OUTPUT
                echo "file_path=hello-world.txt" >> $GITHUB_OUTPUT
                echo "message=" >> $GITHUB_OUTPUT
                echo "trigger=workflow_run" >> $GITHUB_OUTPUT
                echo "üìÅ Detected file: hello-world.txt"
                echo "üîë Found deployment hash: $DEPLOYMENT_HASH"
              else
                echo "hash=" >> $GITHUB_OUTPUT
                echo "file_path=" >> $GITHUB_OUTPUT
                echo "message=" >> $GITHUB_OUTPUT
                echo "trigger=workflow_run" >> $GITHUB_OUTPUT
                echo "‚ö†Ô∏è No deployment hash found in logs"
              fi
            else
              echo "hash=" >> $GITHUB_OUTPUT
              echo "file_path=" >> $GITHUB_OUTPUT
              echo "message=" >> $GITHUB_OUTPUT
              echo "trigger=workflow_run" >> $GITHUB_OUTPUT
              echo "‚ö†Ô∏è No deployment logs found"
            fi
          fi

      - name: üê¶ Announce on Twitter
        if: steps.deployment.outputs.hash != ''
        env:
          ANT_PROCESS_ID: ${{ secrets.ANT_PROCESS_ID }}
          OWNER_ARNS_NAME: ${{ secrets.OWNER_ARNS_NAME }}
          WALLET_ADDRESS: ${{ secrets.WALLET_ADDRESS }}
          ARWEAVE_JWK_JSON: ${{ secrets.ARWEAVE_JWK_JSON }}
          TWITTER_APP_KEY: ${{ secrets.TWITTER_APP_KEY }}
          TWITTER_APP_SECRET: ${{ secrets.TWITTER_APP_SECRET }}
          TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
          TWITTER_ACCESS_SECRET: ${{ secrets.TWITTER_ACCESS_SECRET }}
        run: |
          # Always use public announcements
          ANNOUNCE_TYPE="public"
          
          echo "üê¶ Posting public announcement to Twitter..."
          echo "üìÅ File: ${{ steps.deployment.outputs.file_path }}"
          echo "üîë Hash: ${{ steps.deployment.outputs.hash }}"
          echo "üéØ Trigger: ${{ steps.deployment.outputs.trigger }}"
          echo "üì¢ Type: Public tweet"
          
          if node scripts/announce.js "${{ steps.deployment.outputs.hash }}" "${{ steps.deployment.outputs.file_path }}" "$ANNOUNCE_TYPE"; then
            echo "‚úÖ Twitter announcement posted successfully!"
          else
            echo "‚ùå Twitter announcement failed"
            exit 1
          fi

      - name: üìã Announcement Summary
        if: always()
        run: |
          echo "üìä Announcement Summary:"
          echo "  Trigger: ${{ steps.deployment.outputs.trigger || 'unknown' }}"
          echo "  File: ${{ steps.deployment.outputs.file_path || 'unknown' }}"
          echo "  Hash: ${{ steps.deployment.outputs.hash || 'unknown' }}"
          echo "  Status: ${{ job.status }}"
