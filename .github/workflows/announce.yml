name: 📢 Discord Deployment Announcement

on:
  workflow_dispatch:
    inputs:
      deployment_hash:
        description: 'Deployment hash/undername to announce'
        required: true
        type: string
      file_path:
        description: 'File that was deployed'
        required: false
        type: string
        default: 'index.html'
      announce_type:
        description: 'Announcement type (Discord only)'
        required: false
        type: choice
        default: 'discord'
        options:
          - 'discord'
      custom_message:
        description: 'Custom message (optional)'
        required: false
        type: string

jobs:
  announce:
    runs-on: ubuntu-latest
    # Only run on manual trigger (workflow_dispatch)
    if: ${{ github.event_name == 'workflow_dispatch' }}
    permissions:
      contents: read
    steps:
      - name: 🚀 Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history for better commit analysis

      - name: 🔧 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: 📦 Install Dependencies
        run: npm ci

      - name: 🧪 Test Discord Connection
        env:
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          echo "🔍 Testing Discord webhook connection..."
          if node deploy.js --test-discord; then
            echo "✅ Discord connection successful"
          else
            echo "❌ Discord connection failed - skipping announcement"
            exit 0
          fi

      - name: 📊 Get Deployment Information
        id: deployment
        run: |
          echo "🔍 Getting deployment information from workflow inputs..."
          
          echo "hash=${{ github.event.inputs.deployment_hash }}" >> $GITHUB_OUTPUT
          echo "file_path=${{ github.event.inputs.file_path }}" >> $GITHUB_OUTPUT
          echo "message=${{ github.event.inputs.custom_message }}" >> $GITHUB_OUTPUT
          echo "trigger=workflow_dispatch" >> $GITHUB_OUTPUT
          
          # Try to get manifest TX ID from logs for additional context
          if [ -f "logs/deployments.json" ]; then
            MANIFEST_TX_ID=$(node -e "
              const fs = require('fs');
              try {
                const logs = JSON.parse(fs.readFileSync('logs/deployments.json', 'utf8'));
                const latest = logs[logs.length - 1];
                console.log(latest?.manifestTxId || latest?.txId || '');
              } catch (e) {
                console.log('');
              }
            ")
            if [ -n "$MANIFEST_TX_ID" ]; then
              echo "manifest_tx_id=$MANIFEST_TX_ID" >> $GITHUB_OUTPUT
              echo "📋 Found manifest TX ID: $MANIFEST_TX_ID"
            else
              echo "manifest_tx_id=" >> $GITHUB_OUTPUT
            fi
          else
            echo "manifest_tx_id=" >> $GITHUB_OUTPUT
          fi

      - name: 🔍 Check if deployment occurred
        id: check-deployment
        run: |
          if [ -z "${{ steps.deployment.outputs.hash }}" ]; then
            echo "⚠️ No deployment hash found - skipping announcement"
            echo "has_deployment=false" >> $GITHUB_OUTPUT
          else
            echo "✅ Deployment hash found: ${{ steps.deployment.outputs.hash }}"
            echo "has_deployment=true" >> $GITHUB_OUTPUT
          fi

      - name: 📢 Announce on Discord
        if: steps.check-deployment.outputs.has_deployment == 'true'
        env:
          ANT_PROCESS_ID: ${{ secrets.ANT_PROCESS_ID }}
          OWNER_ARNS_NAME: ${{ secrets.OWNER_ARNS_NAME }}
          WALLET_ADDRESS: ${{ secrets.WALLET_ADDRESS }}
          ARWEAVE_JWK_JSON: ${{ secrets.ARWEAVE_JWK_JSON }}
          DISCORD_WEBHOOK_URL: ${{ secrets.DISCORD_WEBHOOK_URL }}
        run: |
          # Always use Discord announcements
          ANNOUNCE_TYPE="discord"
          
          echo "📢 Sending Discord notification..."
          echo "📁 File: ${{ steps.deployment.outputs.file_path }}"
          echo "🔑 Hash: ${{ steps.deployment.outputs.hash }}"
          echo "🎯 Trigger: ${{ steps.deployment.outputs.trigger }}"
          echo "📢 Type: Discord notification"
          
          if node scripts/discord-announce.js "${{ steps.deployment.outputs.hash }}" "${{ steps.deployment.outputs.file_path }}" "${{ steps.deployment.outputs.manifest_tx_id }}"; then
            echo "✅ Discord notification sent successfully!"
          else
            echo "❌ Discord notification failed"
            exit 1
          fi

      - name: 📋 Announcement Summary
        if: always()
        run: |
          echo "📊 Announcement Summary:"
          echo "  Trigger: ${{ steps.deployment.outputs.trigger || 'unknown' }}"
          echo "  File: ${{ steps.deployment.outputs.file_path || 'unknown' }}"
          echo "  Hash: ${{ steps.deployment.outputs.hash || 'unknown' }}"
          echo "  Status: ${{ job.status }}"
